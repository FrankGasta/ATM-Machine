#include <iostream>
#include <fstream>
#include <conio.h>
#include <windows.h>

using namespace std; // Added namespace

class Transaction {
private:
    int withdraw_checker(int amount, int balance);
    int withdraw_calc(int balance, int withdraw);
    int deposit_checker(int amount);
    int deposit_calc(int balance, int deposit);

public:
    void transaction_menu();
    void displayBalance();
    void transaction_withdraw();
    void transaction_deposit();
};

void Transaction::transaction_menu()
{
    Transaction trans;

    string transactionMenu[4] = {"Balance Inquiry", "Withdraw", "Deposit", "Exit"};
    int pointer = 0;
    const char ENTER = 13;

    while (true) {
        system("cls");
        cout << "TRANSACTION MENU" << endl << endl;

        for (int i = 0; i < 4; ++i) {
            if (i == pointer) {
                cout << "> " << transactionMenu[i] << endl; // Highlight the selected option
            } else {
                cout << "  " << transactionMenu[i] << endl;
            }
        }

        // Wait for user input to navigate the menu
        char ch = _getch(); // Get a character without waiting for Enter key

        if (ch == VK_UP) {
            pointer--;
            if (pointer < 0) {
                pointer = 3; // Loop back to last option
            }
        } else if (ch == VK_DOWN) {
            pointer++;
            if (pointer > 3) {
                pointer = 0; // Loop back to first option
            }
        } else if (ch == ENTER) {
            switch (pointer) {
                case 0:
                    trans.displayBalance();
                    break;
                case 1:
                    trans.transaction_withdraw();
                    break;
                case 2:
                    trans.transaction_deposit();
                    break;
                case 3:
                    exit(0);
            }
        }
    }
}

void Transaction::displayBalance()
{
    int balance;
    ifstream infile("account.txt");
    if (infile.is_open()) {
        infile >> balance;
        infile.close();
    } else {
        cout << "Unable to open file" << endl;
    }

    cout << "========= Balance =========" << endl;
    cout << "Amount: Php. " << balance << ".00" << endl;
    cout << "Press any key to continue..." << endl;
    _getch();
}

void Transaction::transaction_withdraw()
{ 
    int balance;
    ifstream infile("account.txt");
    if (infile.is_open()) {
        infile >> balance;
        infile.close();
    } else {
        cout << "Unable to open file" << endl;
    }

    int inputAmount;

    cout << "======== Withdraw ========" << endl;
    cout << "Input Amount: Php. ";
    cin >> inputAmount;

    if (inputAmount > balance) {
        cout << "Insufficient balance." << endl;
    } else {
        balance -= inputAmount;
        ofstream outfile("account.txt");
        if (outfile.is_open()) {
            outfile << balance;
            outfile.close();
        } else {
            cout << "Unable to open file" << endl;
        }
        cout << "Withdrawal successful. New balance: Php. " << balance << ".00" << endl;
    }

    cout << "Press any key to continue..." << endl;
    _getch();
}

void Transaction::transaction_deposit()
{
    int balance;
    ifstream infile("account.txt");
    if (infile.is_open()) {
        infile >> balance;
        infile.close();
    } else {
        cout << "Unable to open file" << endl;
    }

    int inputAmount;

    cout << "=========== Deposit ============" << endl;
    cout << "Input Amount: Php. ";
    cin >> inputAmount;

    balance += inputAmount;
    ofstream outfile("account.txt");
    if (outfile.is_open()) {
        outfile << balance;
        outfile.close();
    } else {
        cout << "Unable to open file" << endl;
    }
    cout << "Deposit successful. New balance: Php. " << balance << ".00" << endl;

    cout << "Press any key to continue..." << endl;
    _getch();
}

int main() {
    Transaction trans;
    trans.transaction_menu();
    return 0;
}
